<?xml version='1.0'?>

<launch>

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="$(find selfie_sim_control)/config/selfie_sim_control.yaml" command="load"/>

  <!-- load the controllers -->
  <node name="controller_manager" pkg="controller_manager" type="spawner" respawn="false"
        output="screen" ns="/selfie" args="left_rear_wheel_velocity_controller right_rear_wheel_velocity_controller
                                            left_front_wheel_velocity_controller right_front_wheel_velocity_controller
                                            left_steering_hinge_position_controller right_steering_hinge_position_controller
                                            joint_state_controller"/>

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen" required="true">
    <remap from="/joint_states" to="/selfie/joint_states" />
  </node>

  <!-- servo node -->
  <node pkg="selfie_sim_control" type="servo_throttle_commands.py" name="servo_throttle_commands" output="screen"/>
<!--  <node pkg="selfie_sim_control" type="sim_manager.py" name="sim_manager" output="screen"/>
  <node pkg="selfie_perception" type="detect_obstacles" name="detect_obstacles"/>
-->
  <!-- Allow for Gazebo to broadcast odom -->
  <node pkg="selfie_gazebo" name="gazebo_odometry_node" type="gazebo_odometry.py" output="screen"/> 

</launch>
