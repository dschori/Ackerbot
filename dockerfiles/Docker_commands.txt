Mapping:
Tab1, Start the Gazebo and Rviz Sim: roslaunch selfie_race easy_track1.launch
Tab2, Start the Car Controll: rosrun selfie_sim_control sim_manager.py
Tab3, Start the Hector Mapping: roslaunch hector_mapping mapping_default.launch
Move Around
Tab4, Save the Map: rosrun map_server map_saver -f map_name


Navigation:
Tab1, Start the Gazebo and Rviz Sim: roslaunch selfie_race easy_track1.launch
Tab2, Start the Car Controll: rosrun selfie_sim_control sim_manager.py
Tab3, Start Navigation: roslaunch steer_bot_navigation teb_navigation.launch
Set Navigation Goal in RVIZ



sudo docker build -t ros-noetic-realsense -f Dockerfile.ros.noetic .



# start sensors (realsense + velodyne)
sudo docker run -it --privileged --net=host --name weed_bot \
-v /home/dschori/MasterThesis/catkin_ws/src/robot_pkg:/workspace/catkin_ws/src/robot_pkg \
-v /home/dschori/MasterThesis/catkin_ws/build:/workspace/catkin_ws/build \
-v /home/dschori/MasterThesis/catkin_ws/devel:/workspace/catkin_ws/devel \
-v /home/dschori/MasterThesis/catkin_ws/logs:/workspace/catkin_ws/logs \
ros-noetic-realsense bash

rosbag record -a -O data.bag -x "/camera_t265/fisheye1/(.*)|/camera_t265/fisheye2/(.*)" --split --size 1024

rosrun map_server map_saver -f /home/dschori/MasterThesis/catkin_ws/src/robot_pkg/maps/indoor


sudo docker run -it -p 8888:8888 -p 8080:8080 \
 -v /home/dschori/PycharmProjects/MasterThesis/rl_ws:/home/catkin_ws/src/rl_ws dschori/weed-bot bash

 sudo docker run -it -p 8888:8888 -p 8080:8080 \
 -v /home/dschori/MasterThesis/rl_ws:/home/catkin_ws/src/rl_ws dschori/weed-bot bash

docker run --rm -ti -e NVIDIA_VISIBLE_DEVICES=15 -p 8882:8888 -p 8884:8080 dschori/weed-bot bash


sudo docker run \
-it \
--rm  \
--gpus all \
-e DISPLAY=${DISPLAY} \
--net=host \
--user "$(id -u):$(id -g)" \
-v snap/pycharm-professional/current:/charm \
test-image